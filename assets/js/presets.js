const PRESETS = {
    coffee: {
      name: "‚òï –ö–æ—Ñ–µ-—Å—Ü–µ–Ω–∞",
      data: {
        prompt: "–î–µ–≤—É—à–∫–∞ –≤ –∫—Ä–∞—Å–Ω–æ–º —Å–≤–∏—Ç–µ—Ä–µ —Å —É–∑–æ—Ä–∞–º–∏, –ª–∏—Ü–æ —É–∫—Ä–∞—à–µ–Ω–æ –º–∞–Ω–¥–∞–ª–∞–º–∏, –ø—å—ë—Ç –∫–æ—Ñ–µ, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–¥–∞—ë—Ç —Ä—É–∫–∞ –∏–∑-–∑–∞ –∫–∞–¥—Ä–∞. –ú–∏—Å—Ç–∏—á–µ—Å–∫–∞—è –∞—Ç–º–æ—Å—Ñ–µ—Ä–∞.",
        style: "painterly, magical realism",
        camera: "static medium close-up",
        palette: "deep red, gold, teal, warm amber",
        audio: "soft ambient music, gentle sip sound",
        model: "Runway Gen-4"
      }
    },
    anime: {
      name: "üé® –ê–Ω–∏–º–µ-—Å—Ç–∞—Ä—Ç",
      data: {
        prompt: "–ê–Ω–∏–º–µ-–¥–µ–≤—É—à–∫–∞ —Å–º–æ—Ç—Ä–∏—Ç –≤ –¥–æ–∂–¥–ª–∏–≤–æ–µ –æ–∫–Ω–æ. –ú–µ–ª–∞–Ω—Ö–æ–ª–∏—á–Ω–æ–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ.",
        style: "anime",
        camera: "slow zoom in",
        palette: "cool blue, grey, soft pink",
        audio: "rain sounds, piano melody",
        model: "Pika Labs"
      }
    }
  };
  
  export function renderPresets() {
    const container = document.getElementById('presetsContainer');
    if (!container) return;
  
    container.innerHTML = Object.entries(PRESETS).map(([key, preset]) => 
      `<button class="preset-btn" onclick="applyPreset('${key}')">${preset.name}</button>`
    ).join('');
  }
  
  window.applyPreset = function(key) {
    if (!PRESETS[key]) return;
    const p = PRESETS[key].data;
  
    document.getElementById('mainPrompt').value = p.prompt;
    document.getElementById('style').value = p.style;
    document.getElementById('camera').value = p.camera;
    document.getElementById('palette').value = p.palette;
    document.getElementById('audio').value = p.audio;
    document.getElementById('model').value = p.model;
  
    // –û–±–Ω–æ–≤–ª—è–µ–º –∫–∞—Å—Ç–æ–º–Ω—ã–µ —Å–µ–ª–µ–∫—Ç—ã
    setTimeout(() => {
      const customSelects = document.querySelectorAll('.custom-select');
      customSelects.forEach(customSelect => {
        const originalSelect = customSelect.nextElementSibling;
        if (originalSelect && originalSelect.tagName === 'SELECT') {
          const value = originalSelect.value;
          const trigger = customSelect.querySelector('.custom-select-trigger');
          const selectedOption = customSelect.querySelector(`[data-value="${value}"]`);
          if (trigger && selectedOption) {
            trigger.textContent = selectedOption.textContent;
            customSelect.querySelectorAll('.custom-select-option').forEach(option => {
              option.classList.remove('selected');
            });
            selectedOption.classList.add('selected');
          }
        }
      });
    }, 0);
  
    alert(`–ü—Ä–µ—Å–µ—Ç "${PRESETS[key].name}" –ø—Ä–∏–º–µ–Ω—ë–Ω!`);
  };
  
  export function loadExamplePreset() {
    applyPreset('coffee');
  }